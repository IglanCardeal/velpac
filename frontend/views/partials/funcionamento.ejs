
<section class="py-5 text-white" id="solucao">
  <div class="container">
    <h1 class="display-4 text-center pb-5">
      Como Funciona o Sistema da VELPAC?
    </h1>
    <div class="row">
      <div class="col text-justify">
        <p>
          O gerenciamento do tempo de semáforo se dar através de um interface de usuário em uma aplicação web (site de gerenciamento de semáforos da velpac - SGS) onde, apos o administrador se autenticar ele tera acesso ao sistema onde sera possível determinar o tempo das rotinas, cadastrar um semáforo, editar tempo limites de rotinas e adicionar novos administradores ao sistema.
        </p>
        <p>
          Para demonstrar melhor, foi criado um protótipo em escala reduzida, onde temos uma maquete que representa um cruzamento de uma via com uma faixa de pedestre. Foi utilizado a plataforma de prototipagem eletrônica de hardware livre <a href="http://www.arduino.cc" style="text-decoration: none">Arduino</a>, com auxilio de componentes eletrônicos como jumpers, resistores, buzz sonoro, módulo de bluetooth para acionamento de botão acessível de pedestres e leds para montagem do protótipo, além da IDE do Arduino para exibição de informações relevantes e carregamento do código da aplicação, sendo que este código estará disponível para download. Logo a seguir, tem disponibilizado imagens e especificações do componentes usados no projeto.
        </p>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <h2 class="text-center py-3">
          O Sistema de Gerenciamento de Semaforos
        </h2>
      </div>
      <div class="col-md-6 text-justify">
        <p>
          Esta é a aplicação web que permite determinar as rotinas do semáforo, neste caso, as rotinas de tempo para os semáforos de pedestres e carros. Para acessar o sistema, basta informar o CPF e senha do usuário/administrador cadastrado. Neste site gerenciador, temos apenas administrador cadastrado para demonstrar o funcionamento e para acessar o sistema, podemos realizar o login informando o cpf <em>12345678900</em> e a senha <em>123</em>.
        </p>
      </div>
      <div class="col-md-6 col-sm-12 col-xs-12 text-center">
        <img
          class="img-fluid lazyload mb-3 border border-info rounded"
          data-src="img/projeto/sgs.webp"
        />
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <h2 class="text-center py-3">
          Entrei no sistema, e agora...?
        </h2>
      </div>
      <div class="col-md-12 col-sm-12 col-xs-12 text-center">
        <img
          class="img-fluid lazyload mb-3 border border-info rounded"
          data-src="img/projeto/sema-sgs.png"
        />
      </div>
      <div class="col-md-12 text-justify">
        <p>
          Será exibido uma tabela com todos os semáforos cadastrados no sistema pelo administrador. As informações relevantes sobre o semáforo consistem de: <br>
          <ul>
            <li>
              <p>
                <b>Endereço:</b> onde este semáforo está localizado na cidade.
              </p>
            </li>
            <li>
              <p>
                <b>Editar rotina:</b> um botão que irá abrir um modal onde poderá ser definida uma rotina para o semáforo com tempo para o sinal verde de pedestres e carros. O tempo deve ser informado em segundos.
              </p>
            </li>
            <li>
              <p>
                <b>Definir limites:</b> como administrador, tempo máximos e minimos poderão ser definidos para que sejam obedecidos pelos usuários quando estes forem alterar uma rotina.
              </p>
            </li>
            <li>
              <p>
                <b>Rotina atual:</b> verificar qual a última rotina definida para os semáforos.
              </p>
            </li>
            <li>
              <p>
                <b>última alteração:</b> verificar o nome do usuário ou administrador que definiu a última rotina. Uma data da modificação também será informada.
              </p>
            </li>
            <li>
              <p>
                <b>Porta serial:</b> endereço da porta serial que permite estabelecer a comunicação do servidor com o arduino.
              </p>
            </li>
          </ul>
        </p>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <h2 class="text-center py-3">
          Quero alterar uma rotina
        </h2>
      </div>
      <div class="col-md-6 col-sm-12 col-xs-12 text-center">
        <img
          class="img-fluid lazyload mb-3 border border-info rounded"
          data-src="img/projeto/definir-sgs.png"
        />
      </div>
      <div class="col-md-6 text-justify">
        <p>
          Aperte o botão <em>Definir</em> e após abrir a jenela de modal, defina a rotina desejada e clique em <em>Atualizar</em>. Neste exemplo vamos definir 40 segundos para carros e 20 segundos para pedestres.
        </p>
      </div>
      <div class="col-md-6 col-sm-12 col-xs-12 text-center">
          <img
            class="img-fluid lazyload mb-3 border border-info rounded"
            data-src="img/projeto/confir-sgs.png"
          />
        </div>
        <div class="col-md-6 text-justify">
          <p>
            Se tudo ocorrer com sucesso, uma mensagem será exibida e a janela de modal será fechada.
          </p>
        </div>
    </div>
    <div class="row mt-5">
      <div class="col-md-12 text-justify">
        <p>
         Agora no terminal da IDE do Arduino, será exibida uma mensagem informando que o Arduino recebeu as informações do servidor e as rotinas serão aplicadas dentro de alguns instantes.
        </p>
      </div>
      <div class="col-md-12 col-sm-12 col-xs-12 text-center">
        <img
          class="img-fluid lazyload mb-3 border border-info rounded"
          data-src="img/projeto/terminal-arduino.png"
        />
      </div>
    </div>
    <div class="row mt-5">
      <div class="col-12">
        <h2 class="text-center py-3">
          A arquitetura da VELPAC
        </h2>
      </div>
      <div class="col-md-12 text-justify">
        <p>
          Através do site gerenciador, ao submeter uma nova rotina, os dados serão enviados para o servidor da <em>VELPAC</em> que fica responsável por validar os dados e estabelecer a comunicação com o Arduino. Se tudo ocorrer como esperado, os dados serão enviados em formato de string com a seguinte estrutura: <b>"[tempo para os carros]|[tempo para os pedestres]"</b>. No nosso exemplo, quando enviamos o tempo de 40 segundos para carros e 20 segundos para pedestres, o Arduino receberá a string "40|20" e o código do mesmo está configurado para detectar o recebimento destes dados do servidor e realizar as tratativas para aplicar os tempos no semáforo.
        </p>
      </div>
      <div class="col-md-12 col-sm-12 col-xs-12 text-center">
        <img
          class="img-fluid lazyload mb-3 border border-info rounded"
          data-src="img/projeto/arquit-sgs.jpg"
        />
      </div>
    </div>

    <div class="row mt-5">
      <div class="col-12">
        <h2 class="text-center py-3">
          Simulação e Resultados
        </h2>
      </div>
      <div class="col-md-12 text-justify">
        <p>
          Foi realizada uma simulação para demonstrar na prática a aplicação tendo efeitos no semáforo. Com o Arduino montado e os componentes do circuito inseridos na protoboard, conectado ao computador via porta serial, foi exibida a interface wew, na página de administração, foi definidos os tempos de teste para observarmos os efeitos no protótipo. Intervalos curtos de 4 segundos e 2 segundos e 40 segundos e 20 segundos para dinamizar os efeitos da gerência do semáforo. <br>
          Na simulação, temos um buzzer para favorecer a acessibilidade para deficientes, onde quando o semáforo para pedestres estiver fechado (vermelho pedestre aceso), o buzzer não emite som algum. Quando o semáforo estiver aberto para os pedestres (verde pedestre aceso), o buzzer irá emitir um bip intervalado, indicando que o sinal está aberto. Quando o semáforo estiver em estado de atenção (vermelho pedestre piscando), o buzzer irá emitir um bip continuo, indicando uma eminência de que o semáforo de pedestre irá fechar. <br>
          Nesta simulação, a via teórica onde o semáforo se encontra, possui um limite máximo de 40km/h, logo foi definido um tempo de alerta para os carros (semáforo amarelo) padrão de 3 segundos, e este valor não muda com alteração de rotina dos semáforos. Para os pedestres, o tempo de semáforo em alerta (vermelho pedestre piscando), foi definido o tempo padrão de 5 segundos e este valor também não muda com possível alteração de rotina dos semáforos. <br>
          A alterção de estado de vermelho para carros e verde para pedestres, não ocorre instantaneamente. Quando o sinal de carros fecha, o sinal verde de pedestre demora 1 segundo para abrir. A alteração de estado de vermelho para pedestre e verde para carros também não ocorre de imediato, pois o sinal de carros irá demorar 1,5 segundos para abrir depois do de pedestres fechar. Estes atrasos de mudança de estado são intencionais nesta simulação para efeitos de segurança pública. <br>
          Abaixo, segue um vídeo mostrando a simulação.
        </p>
      </div>
      <div class="col-md-12 col-sm-12 col-xs-12 text-center">
        <div class="simulacao-video embed-responsive embed-responsive-16by9">
          <iframe class="embed-responsive-item" width="560" height="315" src="https://www.youtube.com/embed/yXSAiS25zFo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
      </div>
    </div>
    
  </div>
</section>